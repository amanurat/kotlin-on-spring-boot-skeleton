group "com.example.kotlin.springboot"
version "0.0.1"

buildscript {
    ext {
        querydslGeneratedSourcesDir = file("src/main/querydsl-generated")
        querydslInputEntityPackage = "com.example.kotlin.springboot"

        kotlin_version = '1.0.0-beta-3594'
        spring_boot_version = '1.3.0.RELEASE'
        spring_loaded_version = '1.2.4.RELEASE'
        mysql_version = '5.1.37'
        aws_version = '1.10.37'
        liquibase_version = '3.4.1'
        swagger_version = '2.2.2'
        flyway_version = "3.2.1"
        querydsl_version = "4.0.7"
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath "org.springframework:springloaded:$spring_loaded_version"
        classpath "org.flywaydb:flyway-gradle-plugin:$flyway_version"
        classpath "io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE"

        classpath files("${buildDir}/classes/main")
        classpath 'javax:javaee-api:7.0'
        classpath "com.querydsl:querydsl-sql-codegen:$querydsl_version"
    }
}

apply plugin: 'eclipse'
apply plugin: 'idea'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.flywaydb.flyway'

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-starter-parent:$spring_boot_version"
        mavenBom "com.amazonaws:aws-java-sdk-bom:$aws_version"
    }
}

dependencies {
    testCompile 'com.jayway.restassured:rest-assured:2.7.0'

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "mysql:mysql-connector-java:$mysql_version"
    compile "commons-lang:commons-lang:2.3"
    compile 'org.mindrot:jbcrypt:0.3m'
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "org.springframework.hateoas:spring-hateoas"
    compile 'com.amazonaws:aws-java-sdk-cognitoidentity'
    compile 'com.amazonaws:aws-java-sdk-ses'
    compile "io.springfox:springfox-swagger2:$swagger_version"
    compile "io.springfox:springfox-swagger-ui:$swagger_version"
    compile "com.querydsl:querydsl-jpa:$querydsl_version"
}

sourceSets {
    main {
        kotlin {
            srcDirs = ["src/main/kotlin",
                       "src/main/java",
                       querydslGeneratedSourcesDir]
        }
    }
    test {
        kotlin {
            srcDir "src/test/kotlin"
        }
    }
}

eclipse {
    project {
        name = 'KotlinSpringBoot'
    }
}

flyway {
    url = "jdbc:mysql://localhost/KotlinSpringBoot"
    user = 'root'
}

task generateQueryDSL(group: 'build', description: 'Generate QueryDSL query types from compiled entity types.') << {
    def exporter = new com.querydsl.codegen.GenericExporter()
    exporter.setKeywords(com.querydsl.codegen.Keywords.JPA)
    exporter.setEntityAnnotation(javax.persistence.Entity.class)
    exporter.setEmbeddableAnnotation(javax.persistence.Embeddable.class)
    exporter.setEmbeddedAnnotation(javax.persistence.Embedded.class)
    exporter.setSupertypeAnnotation(javax.persistence.MappedSuperclass.class)
    exporter.setSkipAnnotation(javax.persistence.Transient.class)
    exporter.setTargetFolder(querydslGeneratedSourcesDir)
    exporter.export(querydslInputEntityPackage)
}
